// Code generated by goctl. DO NOT EDIT.
// Source: push.proto

package pushclient

import (
	"context"

	"nichebox/service/push/rpc/pb/push"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	PushToUserRequest  = push.PushToUserRequest
	PushToUserResponse = push.PushToUserResponse

	Push interface {
		PushToUser(ctx context.Context, in *PushToUserRequest, opts ...grpc.CallOption) (*PushToUserResponse, error)
	}

	defaultPush struct {
		cli zrpc.Client
	}
)

func NewPush(cli zrpc.Client) Push {
	return &defaultPush{
		cli: cli,
	}
}

func (m *defaultPush) PushToUser(ctx context.Context, in *PushToUserRequest, opts ...grpc.CallOption) (*PushToUserResponse, error) {
	client := push.NewPushClient(m.cli.Conn())
	return client.PushToUser(ctx, in, opts...)
}
