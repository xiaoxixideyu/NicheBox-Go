// Code generated by goctl. DO NOT EDIT.
// Source: comment.proto

package server

import (
	"context"

	"nichebox/service/comment/rpc/internal/logic"
	"nichebox/service/comment/rpc/internal/svc"
	"nichebox/service/comment/rpc/pb/comment"
)

type CommentServer struct {
	svcCtx *svc.ServiceContext
	comment.UnimplementedCommentServer
}

func NewCommentServer(svcCtx *svc.ServiceContext) *CommentServer {
	return &CommentServer{
		svcCtx: svcCtx,
	}
}

func (s *CommentServer) Comment(ctx context.Context, in *comment.CommentRequest) (*comment.CommentResponse, error) {
	l := logic.NewCommentLogic(ctx, s.svcCtx)
	return l.Comment(in)
}

func (s *CommentServer) DeleteComment(ctx context.Context, in *comment.DeleteCommentRequest) (*comment.DeleteCommentResponse, error) {
	l := logic.NewDeleteCommentLogic(ctx, s.svcCtx)
	return l.DeleteComment(in)
}

func (s *CommentServer) GetComment(ctx context.Context, in *comment.GetCommentRequest) (*comment.GetCommentResponse, error) {
	l := logic.NewGetCommentLogic(ctx, s.svcCtx)
	return l.GetComment(in)
}

func (s *CommentServer) GetCommentsFromSubject(ctx context.Context, in *comment.GetCommentsFromSubjectRequest) (*comment.GetCommentsFromSubjectResponse, error) {
	l := logic.NewGetCommentsFromSubjectLogic(ctx, s.svcCtx)
	return l.GetCommentsFromSubject(in)
}

func (s *CommentServer) GetSubComments(ctx context.Context, in *comment.GetSubCommentsRequest) (*comment.GetSubCommentsResponse, error) {
	l := logic.NewGetSubCommentsLogic(ctx, s.svcCtx)
	return l.GetSubComments(in)
}

func (s *CommentServer) GetSubject(ctx context.Context, in *comment.GetSubjectRequest) (*comment.GetSubjectResponse, error) {
	l := logic.NewGetSubjectLogic(ctx, s.svcCtx)
	return l.GetSubject(in)
}

func (s *CommentServer) GetSubjectByMessage(ctx context.Context, in *comment.GetSubjectByMessageRequest) (*comment.GetSubjectByMessageResponse, error) {
	l := logic.NewGetSubjectByMessageLogic(ctx, s.svcCtx)
	return l.GetSubjectByMessage(in)
}
