// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package server

import (
	"context"

	"nichebox/service/user/rpc/internal/logic"
	"nichebox/service/user/rpc/internal/svc"
	"nichebox/service/user/rpc/pb/user"
)

type UserServer struct {
	svcCtx *svc.ServiceContext
	user.UnimplementedUserServer
}

func NewUserServer(svcCtx *svc.ServiceContext) *UserServer {
	return &UserServer{
		svcCtx: svcCtx,
	}
}

func (s *UserServer) Register(ctx context.Context, in *user.RegisterRequest) (*user.RegisterResponse, error) {
	l := logic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

func (s *UserServer) CheckEmail(ctx context.Context, in *user.CheckEmailRequest) (*user.CheckEmailResponse, error) {
	l := logic.NewCheckEmailLogic(ctx, s.svcCtx)
	return l.CheckEmail(in)
}

func (s *UserServer) GetUidByEmailAndPwd(ctx context.Context, in *user.GetUidByEmailAndPwdRequest) (*user.GetUidByEmailAndPwdResponse, error) {
	l := logic.NewGetUidByEmailAndPwdLogic(ctx, s.svcCtx)
	return l.GetUidByEmailAndPwd(in)
}

func (s *UserServer) CheckUid(ctx context.Context, in *user.CheckUidRequest) (*user.CheckUidResponse, error) {
	l := logic.NewCheckUidLogic(ctx, s.svcCtx)
	return l.CheckUid(in)
}

func (s *UserServer) SetUserBaseInfo(ctx context.Context, in *user.SetUserBaseInfoRequest) (*user.SetUserBaseInfoResponse, error) {
	l := logic.NewSetUserBaseInfoLogic(ctx, s.svcCtx)
	return l.SetUserBaseInfo(in)
}

func (s *UserServer) GetUserBaseInfo(ctx context.Context, in *user.GetUserBaseInfoRequest) (*user.GetUserBaseInfoResponse, error) {
	l := logic.NewGetUserBaseInfoLogic(ctx, s.svcCtx)
	return l.GetUserBaseInfo(in)
}

func (s *UserServer) SetVerificationCode(ctx context.Context, in *user.SetVerificationCodeRequest) (*user.SetVerificationCodeResponse, error) {
	l := logic.NewSetVerificationCodeLogic(ctx, s.svcCtx)
	return l.SetVerificationCode(in)
}

func (s *UserServer) GetVerificationCode(ctx context.Context, in *user.GetVerificationCodeRequest) (*user.GetVerificationCodeResponse, error) {
	l := logic.NewGetVerificationCodeLogic(ctx, s.svcCtx)
	return l.GetVerificationCode(in)
}

func (s *UserServer) RemoveVerificationCode(ctx context.Context, in *user.RemoveVerificationCodeRequest) (*user.RemoveVerificationCodeResponse, error) {
	l := logic.NewRemoveVerificationCodeLogic(ctx, s.svcCtx)
	return l.RemoveVerificationCode(in)
}

func (s *UserServer) ForgetPassword(ctx context.Context, in *user.ForgetPasswordRequest) (*user.ForgetPasswordResponse, error) {
	l := logic.NewForgetPasswordLogic(ctx, s.svcCtx)
	return l.ForgetPassword(in)
}

func (s *UserServer) SetCriticalUserInfo(ctx context.Context, in *user.SetCriticalUserInfoRequest) (*user.SetCriticalUserInfoResponse, error) {
	l := logic.NewSetCriticalUserInfoLogic(ctx, s.svcCtx)
	return l.SetCriticalUserInfo(in)
}

func (s *UserServer) GetCriticalUserInfo(ctx context.Context, in *user.GetCriticalUserInfoRequest) (*user.GetCriticalUserInfoResponse, error) {
	l := logic.NewGetCriticalUserInfoLogic(ctx, s.svcCtx)
	return l.GetCriticalUserInfo(in)
}

func (s *UserServer) SetUserAvatarFileId(ctx context.Context, in *user.SetUserAvatarFileIdRequest) (*user.SetUserAvatarFileIdResponse, error) {
	l := logic.NewSetUserAvatarFileIdLogic(ctx, s.svcCtx)
	return l.SetUserAvatarFileId(in)
}

func (s *UserServer) GetUserAvatarFileId(ctx context.Context, in *user.GetUserAvatarFileIdRequest) (*user.GetUserAvatarFileIdResponse, error) {
	l := logic.NewGetUserAvatarFileIdLogic(ctx, s.svcCtx)
	return l.GetUserAvatarFileId(in)
}
