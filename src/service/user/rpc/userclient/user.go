// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package userclient

import (
	"context"

	"nichebox/service/user/rpc/pb/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CheckEmailRequest          = user.CheckEmailRequest
	CheckEmailResponse         = user.CheckEmailResponse
	GetUserInfoByEmailRequest  = user.GetUserInfoByEmailRequest
	GetUserInfoByEmailResponse = user.GetUserInfoByEmailResponse
	RegisterRequest            = user.RegisterRequest
	RegisterResponse           = user.RegisterResponse

	User interface {
		Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error)
		CheckEmail(ctx context.Context, in *CheckEmailRequest, opts ...grpc.CallOption) (*CheckEmailResponse, error)
		GetUserInfoByEmail(ctx context.Context, in *GetUserInfoByEmailRequest, opts ...grpc.CallOption) (*GetUserInfoByEmailResponse, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

func (m *defaultUser) Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.Register(ctx, in, opts...)
}

func (m *defaultUser) CheckEmail(ctx context.Context, in *CheckEmailRequest, opts ...grpc.CallOption) (*CheckEmailResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.CheckEmail(ctx, in, opts...)
}

func (m *defaultUser) GetUserInfoByEmail(ctx context.Context, in *GetUserInfoByEmailRequest, opts ...grpc.CallOption) (*GetUserInfoByEmailResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetUserInfoByEmail(ctx, in, opts...)
}
