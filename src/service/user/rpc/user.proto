syntax = "proto3";

package userclient;

option go_package = "./user";

// Register
message RegisterRequest {
    string Email = 1;
    string Password = 2;
    string Code = 3;
}
message RegisterResponse {
    int64 Uid = 1;
}
// Register

// CheckEmail
message CheckEmailRequest {
    string Email = 1;
}
message CheckEmailResponse {
    bool Exists = 1;
}
// CheckEmail

// GetUidByEmailAndPwd
message GetUidByEmailAndPwdRequest {
    string Email = 1;
    string Password = 2;
}
message GetUidByEmailAndPwdResponse {
    int64 Uid = 1;
}
// GetUidByEmailAndPwd

// CheckUid
message CheckUidRequest {
    int64 Uid = 1;
}
message CheckUidResponse {
    bool Exists = 1;
}
// CheckUid

// SetUserBaseInfo
message SetUserBaseInfoRequest {
    int64 Uid = 1;
    string Username = 2;
    string Introduction = 3;
}
message SetUserBaseInfoResponse {
}
// SetUserBaseInfo

// GetUserBaseInfo
message GetUserBaseInfoRequest {
    int64 Uid = 1;
}
message GetUserBaseInfoResponse {
    string Username = 1;
    string Introduction = 2;
}
// GetUserBaseInfo

// SetVerificationCode
message SetVerificationCodeRequest {
    string key = 1;
    string val = 2;
    int32 expiration = 3;
}

message SetVerificationCodeResponse {
}
// SetVerificationCode

// GetVerificationCode
message GetVerificationCodeRequest {
    string key = 1;
}

message GetVerificationCodeResponse {
    string val = 1;
}
// GetVerificationCode

// ForgetPassword
message ForgetPasswordRequest {
    string email = 1;
    string newPassword = 2;
    string code = 3;
}

message ForgetPasswordResponse {
}
// ForgetPassword

// SetCriticalUserInfo
message SetCriticalUserInfoRequest {
    int64 uid = 1;
    string password = 2;
}

message SetCriticalUserInfoResponse {
}

// SetCriticalUserInfo

service User {
    rpc Register(RegisterRequest) returns(RegisterResponse);
    rpc CheckEmail(CheckEmailRequest) returns(CheckEmailResponse);
    rpc GetUidByEmailAndPwd(GetUidByEmailAndPwdRequest) returns(GetUidByEmailAndPwdResponse);
    rpc CheckUid(CheckUidRequest) returns(CheckUidResponse);
    rpc SetUserBaseInfo(SetUserBaseInfoRequest) returns(SetUserBaseInfoResponse);
    rpc GetUserBaseInfo(GetUserBaseInfoRequest) returns(GetUserBaseInfoResponse);
    rpc SetVerificationCode(SetVerificationCodeRequest) returns (SetVerificationCodeResponse);
    rpc GetVerificationCode(GetVerificationCodeRequest) returns (GetVerificationCodeResponse);
    rpc ForgetPassword(ForgetPasswordRequest) returns (ForgetPasswordResponse);
    rpc SetCriticalUserInfo(SetCriticalUserInfoRequest) returns (SetCriticalUserInfoResponse);
}