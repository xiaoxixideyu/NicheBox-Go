// Register
type RegisterRequest {
	Email    string `json:"email"`
	Password string `json:"password"`
	Code     string `json:"code"`
}

type RegisterResponse {
	LoginSuccess bool   `json:"login_success"`
	Token        string `json:"token"`
	RefreshToken string `json:"refresh_token"`
}

// Register
// CheckEmailExists
type CheckEmailExistsReqeust {
	Email string `json:"email"`
}

type CheckEmailExistsResponse {
	Exist bool `json:"exist"`
}

// CheckEmailExists
// Login
type LoginReqeust {
	Email    string `json:"email"`
	Password string `json:"password"`
}

type LoginResponse {
	Token        string `json:"token"`
	RefreshToken string `json:"refresh_token"`
}

// Login
// RefreshToken
type RefreshTokenReqeust {}

type RefreshTokenResponse {
	Token        string `json:"token"`
	RefreshToken string `json:"refresh_token"`
}

// RefreshToken
// SendVerificationCode
type SendVerificationCodeRegisterRequest {
	Destination string `json:"destination"`
}

type SendVerificationCodeRegisterResponse {}

type SendVerificationCodePWDRequest {
	Destination string `json:"destination"`
}

type SendVerificationCodePWDResponse {}

type SendVerificationCodeCriticalUserInfoRequest {
	Destination string `json:"destination"`
}

type SendVerificationCodeCriticalUserInfoResponse {}

//SendVerificationCode
// ForgetPassword
type ForgetPasswordRequest {
	Email       string `json:"email"`
	NewPassword string `json:"new_password"`
	Code        string `json:"code"`
}

type ForgetPasswordResponse {}

// ForgetPassword
// SetCriticalUserInfo
type SetCriticalUserInfoRequest {
	Password string `json:"password""`
}

type SetCriticalUserInfoResponse {}

// SetCriticalUserInfo
// CheckVerificationCodeCriticalUserInfo
type CheckVerificationCodeCriticalUserInfoRequest {
	Email string `json:"email"`
	Code  string `json:"code"`
}

type CheckVerificationCodeCriticalUserInfoResponse {}

// CheckVerificationCodeCriticalUserInfo
service User {
	@handler Register
	post /api/user/register (RegisterRequest) returns (RegisterResponse)

	@handler CheckEmailExists
	post /api/user/checkemailexists (CheckEmailExistsReqeust) returns (CheckEmailExistsResponse)

	@handler Login
	post /api/user/login (LoginReqeust) returns (LoginResponse)

	@handler SendVerificationCodeRegister
	post /api/user/sendverificationcoderegister (SendVerificationCodeRegisterRequest) returns (SendVerificationCodeRegisterResponse)

	@handler SendVerificationCodePWD
	post /api/user/sendverificationcodepwd (SendVerificationCodePWDRequest) returns (SendVerificationCodePWDResponse)

	@handler ForgetPassword
	post /api/user/forgetpassword (ForgetPasswordRequest) returns (ForgetPasswordResponse)
}

@server (
	jwt: Auth
)
service User {
	@handler RefreshToken
	post /api/user/refreshtoken (RefreshTokenReqeust) returns (RefreshTokenResponse)

	@handler SetCriticalUserInfo
	post /api/user/setcriticaluserinfo (SetCriticalUserInfoRequest) returns (SetCriticalUserInfoResponse)

	@handler SendVerificationCodeCriticalUserInfo
	post /api/user/sendverificationcodecriticaluserinfo (SendVerificationCodeCriticalUserInfoRequest) returns (SendVerificationCodeCriticalUserInfoResponse)

	@handler CheckVerificationCodeCriticalUserInfo
	post /api/user/checkverificationcodecriticaluserinfo (CheckVerificationCodeCriticalUserInfoRequest) returns (CheckVerificationCodeCriticalUserInfoResponse)
}

