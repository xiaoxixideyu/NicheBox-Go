// Register
type RegisterRequest {
	Email    string `json:"email"`
	Password string `json:"password"`
	Code     string `json:"code"`
}

type RegisterResponse {
	LoginSuccess bool   `json:"login_success"`
	Token        string `json:"token"`
	RefreshToken string `json:"refresh_token"`
}

// Register
// CheckEmailExists
type CheckEmailExistsReqeust {
	Email string `json:"email"`
}

type CheckEmailExistsResponse {
	Exist bool `json:"exist"`
}

// CheckEmailExists
// Login
type LoginReqeust {
	Email    string `json:"email"`
	Password string `json:"password"`
}

type LoginResponse {
	Token        string `json:"token"`
	RefreshToken string `json:"refresh_token"`
}

// Login
// RefreshToken
type RefreshTokenReqeust {}

type RefreshTokenResponse {
	Token        string `json:"token"`
	RefreshToken string `json:"refresh_token"`
}

// RefreshToken
service User {
	@handler Register
	post /api/user/register (RegisterRequest) returns (RegisterResponse)

	@handler CheckEmailExists
	post /api/user/checkemailexists (CheckEmailExistsReqeust) returns (CheckEmailExistsResponse)

	@handler Login
	post /api/user/login (LoginReqeust) returns (LoginResponse)
}

@server (
	jwt: Auth
)
service User {
	@handler RefreshToken
	post /api/user/refreshtoken (RefreshTokenReqeust) returns (RefreshTokenResponse)
}

