// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	"nichebox/service/user/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/register",
				Handler: RegisterHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/checkemailexists",
				Handler: CheckEmailExistsHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/user/forgetpassword",
				Handler: ForgetPasswordHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/login",
				Handler: LoginHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/user/sendverificationcodepwd",
				Handler: SendVerificationCodePWDHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/user/sendverificationcoderegister",
				Handler: SendVerificationCodeRegisterHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/user"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/api/user/checkverificationcodecriticaluserinfo",
				Handler: CheckVerificationCodeCriticalUserInfoHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/refreshtoken",
				Handler: RefreshTokenHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/user/sendverificationcodecriticaluserinfo",
				Handler: SendVerificationCodeCriticalUserInfoHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/user/setcriticaluserinfo",
				Handler: SetCriticalUserInfoHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/setuserbaseinfo",
				Handler: SetUserBaseInfoHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/getmybaseinfo",
				Handler: GetMyBaseInfoHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/api/user"),
	)
}
