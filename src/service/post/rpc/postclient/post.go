// Code generated by goctl. DO NOT EDIT.
// Source: post.proto

package postclient

import (
	"context"

	"nichebox/service/post/rpc/pb/post"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreatePostRequest        = post.CreatePostRequest
	CreatePostResponse       = post.CreatePostResponse
	DeletePostRequest        = post.DeletePostRequest
	DeletePostResponse       = post.DeletePostResponse
	GetModifiedPostsRequest  = post.GetModifiedPostsRequest
	GetModifiedPostsResponse = post.GetModifiedPostsResponse
	GetPostDetailRequest     = post.GetPostDetailRequest
	GetPostDetailResponse    = post.GetPostDetailResponse
	IncreaseUserViewRequest  = post.IncreaseUserViewRequest
	IncreaseUserViewResponse = post.IncreaseUserViewResponse
	ModifiedPostInfo         = post.ModifiedPostInfo

	Post interface {
		CreatePost(ctx context.Context, in *CreatePostRequest, opts ...grpc.CallOption) (*CreatePostResponse, error)
		DeletePost(ctx context.Context, in *DeletePostRequest, opts ...grpc.CallOption) (*DeletePostResponse, error)
		GetPostDetail(ctx context.Context, in *GetPostDetailRequest, opts ...grpc.CallOption) (*GetPostDetailResponse, error)
		IncreaseUserView(ctx context.Context, in *IncreaseUserViewRequest, opts ...grpc.CallOption) (*IncreaseUserViewResponse, error)
		GetModifiedPosts(ctx context.Context, in *GetModifiedPostsRequest, opts ...grpc.CallOption) (*GetModifiedPostsResponse, error)
	}

	defaultPost struct {
		cli zrpc.Client
	}
)

func NewPost(cli zrpc.Client) Post {
	return &defaultPost{
		cli: cli,
	}
}

func (m *defaultPost) CreatePost(ctx context.Context, in *CreatePostRequest, opts ...grpc.CallOption) (*CreatePostResponse, error) {
	client := post.NewPostClient(m.cli.Conn())
	return client.CreatePost(ctx, in, opts...)
}

func (m *defaultPost) DeletePost(ctx context.Context, in *DeletePostRequest, opts ...grpc.CallOption) (*DeletePostResponse, error) {
	client := post.NewPostClient(m.cli.Conn())
	return client.DeletePost(ctx, in, opts...)
}

func (m *defaultPost) GetPostDetail(ctx context.Context, in *GetPostDetailRequest, opts ...grpc.CallOption) (*GetPostDetailResponse, error) {
	client := post.NewPostClient(m.cli.Conn())
	return client.GetPostDetail(ctx, in, opts...)
}

func (m *defaultPost) IncreaseUserView(ctx context.Context, in *IncreaseUserViewRequest, opts ...grpc.CallOption) (*IncreaseUserViewResponse, error) {
	client := post.NewPostClient(m.cli.Conn())
	return client.IncreaseUserView(ctx, in, opts...)
}

func (m *defaultPost) GetModifiedPosts(ctx context.Context, in *GetModifiedPostsRequest, opts ...grpc.CallOption) (*GetModifiedPostsResponse, error) {
	client := post.NewPostClient(m.cli.Conn())
	return client.GetModifiedPosts(ctx, in, opts...)
}
