// Code generated by goctl. DO NOT EDIT.
// Source: longConn.proto

package longconnclient

import (
	"context"

	"nichebox/service/long-connection/rpc/pb/longConn"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	HandShakeRequest  = longConn.HandShakeRequest
	HandShakeResponse = longConn.HandShakeResponse

	LongConn interface {
		HandShake(ctx context.Context, in *HandShakeRequest, opts ...grpc.CallOption) (*HandShakeResponse, error)
	}

	defaultLongConn struct {
		cli zrpc.Client
	}
)

func NewLongConn(cli zrpc.Client) LongConn {
	return &defaultLongConn{
		cli: cli,
	}
}

func (m *defaultLongConn) HandShake(ctx context.Context, in *HandShakeRequest, opts ...grpc.CallOption) (*HandShakeResponse, error) {
	client := longConn.NewLongConnClient(m.cli.Conn())
	return client.HandShake(ctx, in, opts...)
}
