// Code generated by goctl. DO NOT EDIT.
// Source: box_user.proto

package server

import (
	"context"

	"nichebox/service/box_user/rpc/internal/logic"
	"nichebox/service/box_user/rpc/internal/svc"
	"nichebox/service/box_user/rpc/pb/boxuser"
)

type BoxUserServer struct {
	svcCtx *svc.ServiceContext
	boxuser.UnimplementedBoxUserServer
}

func NewBoxUserServer(svcCtx *svc.ServiceContext) *BoxUserServer {
	return &BoxUserServer{
		svcCtx: svcCtx,
	}
}

func (s *BoxUserServer) AddOwner(ctx context.Context, in *boxuser.AddOwnerRequest) (*boxuser.AddOwnerRequest, error) {
	l := logic.NewAddOwnerLogic(ctx, s.svcCtx)
	return l.AddOwner(in)
}

func (s *BoxUserServer) AddOwnerRevert(ctx context.Context, in *boxuser.AddOwnerRequest) (*boxuser.AddOwnerRequest, error) {
	l := logic.NewAddOwnerRevertLogic(ctx, s.svcCtx)
	return l.AddOwnerRevert(in)
}

func (s *BoxUserServer) AddBoxUser(ctx context.Context, in *boxuser.AddBoxUserRequest) (*boxuser.AddBoxUserResponse, error) {
	l := logic.NewAddBoxUserLogic(ctx, s.svcCtx)
	return l.AddBoxUser(in)
}

func (s *BoxUserServer) RemoveBoxUser(ctx context.Context, in *boxuser.RemoveBoxUserRequest) (*boxuser.RemoveBoxUserResponse, error) {
	l := logic.NewRemoveBoxUserLogic(ctx, s.svcCtx)
	return l.RemoveBoxUser(in)
}

func (s *BoxUserServer) SetRole(ctx context.Context, in *boxuser.SetRoleRequest) (*boxuser.SetRoleResponse, error) {
	l := logic.NewSetRoleLogic(ctx, s.svcCtx)
	return l.SetRole(in)
}

func (s *BoxUserServer) GetRole(ctx context.Context, in *boxuser.GetRoleRequest) (*boxuser.GetRoleResponse, error) {
	l := logic.NewGetRoleLogic(ctx, s.svcCtx)
	return l.GetRole(in)
}
