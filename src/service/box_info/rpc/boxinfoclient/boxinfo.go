// Code generated by goctl. DO NOT EDIT.
// Source: box_info.proto

package boxinfoclient

import (
	"context"

	"nichebox/service/box_info/rpc/pb/boxinfo"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateBidRequest  = boxinfo.CreateBidRequest
	CreateBidResponse = boxinfo.CreateBidResponse
	CreateBoxRequest  = boxinfo.CreateBoxRequest
	CreateBoxResponse = boxinfo.CreateBoxResponse

	BoxInfo interface {
		CreateBid(ctx context.Context, in *CreateBidRequest, opts ...grpc.CallOption) (*CreateBidResponse, error)
		CreateBox(ctx context.Context, in *CreateBoxRequest, opts ...grpc.CallOption) (*CreateBoxResponse, error)
		CreateBoxRevert(ctx context.Context, in *CreateBoxRequest, opts ...grpc.CallOption) (*CreateBoxResponse, error)
	}

	defaultBoxInfo struct {
		cli zrpc.Client
	}
)

func NewBoxInfo(cli zrpc.Client) BoxInfo {
	return &defaultBoxInfo{
		cli: cli,
	}
}

func (m *defaultBoxInfo) CreateBid(ctx context.Context, in *CreateBidRequest, opts ...grpc.CallOption) (*CreateBidResponse, error) {
	client := boxinfo.NewBoxInfoClient(m.cli.Conn())
	return client.CreateBid(ctx, in, opts...)
}

func (m *defaultBoxInfo) CreateBox(ctx context.Context, in *CreateBoxRequest, opts ...grpc.CallOption) (*CreateBoxResponse, error) {
	client := boxinfo.NewBoxInfoClient(m.cli.Conn())
	return client.CreateBox(ctx, in, opts...)
}

func (m *defaultBoxInfo) CreateBoxRevert(ctx context.Context, in *CreateBoxRequest, opts ...grpc.CallOption) (*CreateBoxResponse, error) {
	client := boxinfo.NewBoxInfoClient(m.cli.Conn())
	return client.CreateBoxRevert(ctx, in, opts...)
}
