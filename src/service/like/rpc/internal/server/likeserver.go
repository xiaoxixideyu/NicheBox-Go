// Code generated by goctl. DO NOT EDIT.
// Source: like.proto

package server

import (
	"context"

	"nichebox/service/like/rpc/internal/logic"
	"nichebox/service/like/rpc/internal/svc"
	"nichebox/service/like/rpc/pb/like"
)

type LikeServer struct {
	svcCtx *svc.ServiceContext
	like.UnimplementedLikeServer
}

func NewLikeServer(svcCtx *svc.ServiceContext) *LikeServer {
	return &LikeServer{
		svcCtx: svcCtx,
	}
}

func (s *LikeServer) ThumbsUp(ctx context.Context, in *like.ThumbsUpRequest) (*like.ThumbsUpResponse, error) {
	l := logic.NewThumbsUpLogic(ctx, s.svcCtx)
	return l.ThumbsUp(in)
}

func (s *LikeServer) CancelThumbsUp(ctx context.Context, in *like.CancelThumbsUpRequest) (*like.CancelThumbsResponse, error) {
	l := logic.NewCancelThumbsUpLogic(ctx, s.svcCtx)
	return l.CancelThumbsUp(in)
}

func (s *LikeServer) ThumbsUpCount(ctx context.Context, in *like.ThumbsUpCountRequest) (*like.ThumbsUpCountResponse, error) {
	l := logic.NewThumbsUpCountLogic(ctx, s.svcCtx)
	return l.ThumbsUpCount(in)
}

func (s *LikeServer) ThumbsUpHistory(ctx context.Context, in *like.ThumbsUpHistoryRequest) (*like.ThumbsUpHistoryResponse, error) {
	l := logic.NewThumbsUpHistoryLogic(ctx, s.svcCtx)
	return l.ThumbsUpHistory(in)
}
