// Code generated by goctl. DO NOT EDIT.
// Source: relation.proto

package server

import (
	"context"

	"nichebox/service/relation/rpc/internal/logic"
	"nichebox/service/relation/rpc/internal/svc"
	"nichebox/service/relation/rpc/pb/relation"
)

type RelationServer struct {
	svcCtx *svc.ServiceContext
	relation.UnimplementedRelationServer
}

func NewRelationServer(svcCtx *svc.ServiceContext) *RelationServer {
	return &RelationServer{
		svcCtx: svcCtx,
	}
}

func (s *RelationServer) Follow(ctx context.Context, in *relation.FollowRequest) (*relation.FollowResponse, error) {
	l := logic.NewFollowLogic(ctx, s.svcCtx)
	return l.Follow(in)
}

func (s *RelationServer) Unfollow(ctx context.Context, in *relation.UnfollowRequest) (*relation.UnfollowResponse, error) {
	l := logic.NewUnfollowLogic(ctx, s.svcCtx)
	return l.Unfollow(in)
}

func (s *RelationServer) GetFollowers(ctx context.Context, in *relation.GetFollowersRequest) (*relation.GetFollowersResponse, error) {
	l := logic.NewGetFollowersLogic(ctx, s.svcCtx)
	return l.GetFollowers(in)
}

func (s *RelationServer) GetFollowings(ctx context.Context, in *relation.GetFollowingsRequest) (*relation.GetFollowingsResponse, error) {
	l := logic.NewGetFollowingsLogic(ctx, s.svcCtx)
	return l.GetFollowings(in)
}

func (s *RelationServer) GetFollowerCount(ctx context.Context, in *relation.GetFollowerCountRequest) (*relation.GetFollowerCountResponse, error) {
	l := logic.NewGetFollowerCountLogic(ctx, s.svcCtx)
	return l.GetFollowerCount(in)
}

func (s *RelationServer) GetFollowingCount(ctx context.Context, in *relation.GetFollowingCountRequest) (*relation.GetFollowingCountResponse, error) {
	l := logic.NewGetFollowingCountLogic(ctx, s.svcCtx)
	return l.GetFollowingCount(in)
}
