// Code generated by goctl. DO NOT EDIT.
// Source: relation.proto

package relationclient

import (
	"context"

	"nichebox/service/relation/rpc/pb/relation"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	FollowRequest             = relation.FollowRequest
	FollowResponse            = relation.FollowResponse
	GetFollowerCountRequest   = relation.GetFollowerCountRequest
	GetFollowerCountResponse  = relation.GetFollowerCountResponse
	GetFollowersRequest       = relation.GetFollowersRequest
	GetFollowersResponse      = relation.GetFollowersResponse
	GetFollowingCountRequest  = relation.GetFollowingCountRequest
	GetFollowingCountResponse = relation.GetFollowingCountResponse
	GetFollowingsRequest      = relation.GetFollowingsRequest
	GetFollowingsResponse     = relation.GetFollowingsResponse
	RelationMessage           = relation.RelationMessage
	UnfollowRequest           = relation.UnfollowRequest
	UnfollowResponse          = relation.UnfollowResponse

	Relation interface {
		Follow(ctx context.Context, in *FollowRequest, opts ...grpc.CallOption) (*FollowResponse, error)
		Unfollow(ctx context.Context, in *UnfollowRequest, opts ...grpc.CallOption) (*UnfollowResponse, error)
		GetFollowers(ctx context.Context, in *GetFollowersRequest, opts ...grpc.CallOption) (*GetFollowersResponse, error)
		GetFollowings(ctx context.Context, in *GetFollowingsRequest, opts ...grpc.CallOption) (*GetFollowingsResponse, error)
		GetFollowerCount(ctx context.Context, in *GetFollowerCountRequest, opts ...grpc.CallOption) (*GetFollowerCountResponse, error)
		GetFollowingCount(ctx context.Context, in *GetFollowingCountRequest, opts ...grpc.CallOption) (*GetFollowingCountResponse, error)
	}

	defaultRelation struct {
		cli zrpc.Client
	}
)

func NewRelation(cli zrpc.Client) Relation {
	return &defaultRelation{
		cli: cli,
	}
}

func (m *defaultRelation) Follow(ctx context.Context, in *FollowRequest, opts ...grpc.CallOption) (*FollowResponse, error) {
	client := relation.NewRelationClient(m.cli.Conn())
	return client.Follow(ctx, in, opts...)
}

func (m *defaultRelation) Unfollow(ctx context.Context, in *UnfollowRequest, opts ...grpc.CallOption) (*UnfollowResponse, error) {
	client := relation.NewRelationClient(m.cli.Conn())
	return client.Unfollow(ctx, in, opts...)
}

func (m *defaultRelation) GetFollowers(ctx context.Context, in *GetFollowersRequest, opts ...grpc.CallOption) (*GetFollowersResponse, error) {
	client := relation.NewRelationClient(m.cli.Conn())
	return client.GetFollowers(ctx, in, opts...)
}

func (m *defaultRelation) GetFollowings(ctx context.Context, in *GetFollowingsRequest, opts ...grpc.CallOption) (*GetFollowingsResponse, error) {
	client := relation.NewRelationClient(m.cli.Conn())
	return client.GetFollowings(ctx, in, opts...)
}

func (m *defaultRelation) GetFollowerCount(ctx context.Context, in *GetFollowerCountRequest, opts ...grpc.CallOption) (*GetFollowerCountResponse, error) {
	client := relation.NewRelationClient(m.cli.Conn())
	return client.GetFollowerCount(ctx, in, opts...)
}

func (m *defaultRelation) GetFollowingCount(ctx context.Context, in *GetFollowingCountRequest, opts ...grpc.CallOption) (*GetFollowingCountResponse, error) {
	client := relation.NewRelationClient(m.cli.Conn())
	return client.GetFollowingCount(ctx, in, opts...)
}
